#!/sbin/sh
#Red Wolf Recovery Installer script
TMP=/tmp/redwolf-installer
TMPRAMDISK=$TMP/redwolf
RAMDISK=$TMPRAMDISK/ramdisk
MEDIA=/sdcard
ERR=/tmp/redwolferror
RES=$MEDIA/WOLF.res
WOLF=WolfShit
FILES=$RES/FILES
TOOLS=$TMP/tools
LOCALFILE=$TOOLS/recovery.img;
RECOVERY=
new=recovery-new.img
old=recovery-old.img
RWR=$TMP/flash_folder

if [ "$3" ]; then
	zip=$3
	console=/proc/$$/fd/$2
	echo "$console" > /tmp/console
else
	console=$(cat /tmp/console)
	[ "$console" ] || console=/proc/$$/fd/1
fi

print() {
	if [ "$1" ]; then
		echo "ui_print $1" > "$console"
	else
		echo "ui_print  " > "$console"
	fi
	echo
}

device_compatible() {
MemTotalStr="`cat /proc/meminfo | grep MemTotal | head -1 | grep -v '^$' | sed -e 's/^[ \t]*//g'`"
DEVICE=true
if [ "$MemTotalStr" != "" ]; then
MemTotal=${MemTotalStr:16:8}
if [ $MemTotal -gt 2000000 ]; then
    if [ [$MemTotal -gt 2000000 ] && [ $MemTotal -ge 3000000 ] ]; then
    DEVICE=false
    fi
else
   DEVICE=true
   fi
fi
$DEVICE || abort "This device variant is not compatible!" 69;
}

extract() {
	rm -rf "$2"
	mkdir -p "$2"
	unzip -o "$1" -d "$2" || abort "Failed to extract zip to $2!"
}


install_redwolf_zip() {
if [ -f "$TOOLS/$1/$1.zip" ]; then
print "- $1";
if [ ! -d $FILES ]; then
mkdir -p $FILES;
else
if [ -d "$FILES/$1" ]; then
rm -r $FILES/$1;
fi;
fi
mkdir "$FILES/$1";
mv "$TOOLS/$1/$1.zip" "$FILES/$1/$1.zip";
fi;
}

find_recovery_partition() {
	verify_block() {
		RECOVERY=$(readlink -f "$RECOVERY")
		# if the recovery block is a file, we must use dd
		if [ -f "$RECOVERY" ]; then
			use_dd=true
		# if the recovery block is a block device, we use flash_image when possible
		elif [ -b "$RECOVERY" ]; then
			case "$RECOVERY" in
				/dev/block/bml*|/dev/block/mtd*|/dev/block/mmc*)
					use_dd=false ;;
				*)
					use_dd=true ;;
			esac
		# otherwise we have to keep trying other locations
		else
			return 1
		fi
		print "- Found recovery partition at: $RECOVERY"
	}
	# if we already have recovery block set then verify and use it
	[ "$RECOVERY" ] && verify_block && return
	# otherwise, time to go hunting!
	if [ -f /etc/recovery.fstab ]; then
		# recovery fstab v1
		RECOVERY=$(awk '$1 == "/recovery" {print $3}' /etc/recovery.fstab)
		[ "$RECOVERY" ] && verify_block && return
		# recovery fstab v2
		RECOVERY=$(awk '$2 == "/recovery" {print $1}' /etc/recovery.fstab)
		[ "$RECOVERY" ] && verify_block && return
	fi
	for fstab in /fstab.*; do
		[ -f "$fstab" ] || continue
		# device fstab v2
		RECOVERY=$(awk '$2 == "/recovery" {print $1}' "$fstab")
		[ "$RECOVERY" ] && verify_block && return
		# device fstab v1
		RECOVERY=$(awk '$1 == "/recovery" {print $3}' "$fstab")
		[ "$RECOVERY" ] && verify_block && return
	done
	if [ -f /proc/emmc ]; then
		# emmc layout
		RECOVERY=$(awk '$4 == "\"recovery\"" {print $1}' /proc/emmc)
		[ "$RECOVERY" ] && RECOVERY=/dev/block/$(echo "$RECOVERY" | cut -f1 -d:) && verify_block && return
	fi
	if [ -f /proc/mtd ]; then
		# mtd layout
		RECOVERY=$(awk '$4 == "\"recovery\"" {print $1}' /proc/mtd)
		[ "$RECOVERY" ] && RECOVERY=/dev/block/$(echo "$RECOVERY" | cut -f1 -d:) && verify_block && return
	fi
	if [ -f /proc/dumchar_info ]; then
		# mtk layout
		RECOVERY=$(awk '$1 == "/recovery" {print $5}' /proc/dumchar_info)
		[ "$RECOVERY" ] && verify_block && return
	fi
	abort "Unable to find recovery block location" 59;
}
        
abort() {
	[ "$1" ] && {
		print "Error: $1"
		print "Aborting..."
	}
	print "Failed to install Red Wolf Recovery!"
	exit $2
}

Install_Special_Method() {
print "Installing for 2GB RAM device...";
print "Copying files in to the resource folder...";
for i in $TOOLS/*/*.zip; do
[ -f $i ] || continue
k=`basename $i`;
k=${k//.zip/}
install_redwolf_zip $k;
done
find_recovery_partition;
if $use_dd; then
dd if=$LOCALFILE of="$RECOVERY"
else
flash_image "$RECOVERY" $LOCALFILE
fi
[ $? = 0 ] || abort "Failed to write recovery image! You may need to restore your recovery partition" 43;
print "Installation finished!";
}

target=devicenamehere;
source=/default.prop;

recovery_compatibility() {
REQUIREDFILES="
mv
cp
dd
rm
mkdir
basename
flash_image
cat
chmod
grep
unzip
"
for FILE in $REQUIREDFILES; do
    if [ ! -f "/sbin/$FILE" ]; then abort "$FILE - is not supported in this recovery!" 27; fi
done
}

print "#######################################"
print "#    Installing Red Wolf Recovery    #"
print "#######################################"



print "Detecting device and recovery compatibility";
recovery_compatibility
if ([ "`grep "$target" $source`" ]);
	then
device_compatible
print "Device is compatible";
else
abort "This recovery isn't compatible this device!" 15
fi

[ "$zip" ] && {
	print "Unpacking the installer..."
	extract "$zip" "$TMP"
}

if [ ! -d "$TOOLS" ]; then
abort "Unable to unzip!" 19
fi
Install_Special_Method
exit 0
